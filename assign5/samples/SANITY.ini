[DEFAULT]
executables = [test]
timeout = 10

[01-BuildClean]
class = BuildClean

[02-Enter]
class = OutputDiffSoln
command = $test enter
description = create a thread and switch to it

[03-PingPong]
class = OutputDiffSoln
command = $test ping_pong
description = create two threads and switch between them several times

[04-RoundRobin]
class = OutputDiffSoln
command = $test round_robin
description = create five threads which take turns running and yielding

[05-Block]
class = OutputDiffSoln
command = $test block
description = create two threads, one is blocked and then scheduled

[06-Exit]
class = OutputDiffSoln
command = $test exit
description = test exiting via Thread::exit() and via return from main

; [07-Exit2]
; class = OutputDiffSoln
; command = $test exit2
; description = test that a scheduled exiting thread is removed from queue

[08-Stack]
class = OutputDiffSoln
command = $test stack
description = ensure stacks are properly deleted

[09-Preempt]
class = OutputDiffSoln
command = $test preempt
description = create two threads that should alternate without yielding

[11-MutexBasic]
class = OutputDiffSoln
command = $test mutex_basic
description = alternate mutex ownership between two threads

[12-MutexManyThreads]
class = OutputDiffSoln
command = $test mutex_many_threads
description = several threads wait for one lock and then another

[13-MutexMine]
class = OutputDiffSoln
command = $test mutex_mine
description = alternate mutex ownership between two threads to confirm mine()

[14-CondBasic]
class = OutputDiffSoln
command = $test cond_basic
description = one thread waits on a CV and another thread notifies

[15-TwoConds]
class = OutputDiffSoln
command = $test two_conds
description = two threads wait on CVs and a third notifies

[16-NotifyAll]
class = OutputDiffSoln
command = $test notify_all
description = five threads wait on CV and another notifies all

[17-LockVsNotify]
class = OutputDiffSoln
command = $test lock_vs_notify
description = threads already waiting on lock when another thread wakes up from CV